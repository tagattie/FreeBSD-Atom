--- script/build.orig	2020-11-06 18:27:28 UTC
+++ script/build
@@ -33,7 +33,7 @@ const argv = yargs
   .wrap(yargs.terminalWidth())
   .argv
 
-const checkChromedriverVersion = require('./lib/check-chromedriver-version')
+// const checkChromedriverVersion = require('./lib/check-chromedriver-version')
 const cleanOutputDirectory = require('./lib/clean-output-directory')
 const codeSignOnMac = require('./lib/code-sign-on-mac')
 const codeSignOnWindows = require('./lib/code-sign-on-windows')
@@ -71,7 +71,7 @@ process.env.ELECTRON_VERSION = CONFIG.appMetadata.elec
 let binariesPromise = Promise.resolve()
 
 if (!argv.existingBinaries) {
-  checkChromedriverVersion()
+  // checkChromedriverVersion()
   cleanOutputDirectory()
   copyAssets()
   transpilePackagesWithCustomTranspilerPaths()
@@ -91,7 +91,7 @@ if (!argv.existingBinaries) {
 if (!argv.generateApiDocs) {
   binariesPromise
     .then(packageApplication)
-    .then(packagedAppPath => generateStartupSnapshot(packagedAppPath).then(() => packagedAppPath))
+    // .then(packagedAppPath => generateStartupSnapshot(packagedAppPath).then(() => packagedAppPath))
     .then(async packagedAppPath => {
       switch (process.platform) {
         case 'darwin': {
